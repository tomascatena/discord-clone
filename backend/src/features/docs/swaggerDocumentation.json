{
  "openapi": "3.0.0",
  "info": {
    "title": "Discord Clone Backend",
    "version": "1.0.0",
    "description": "This is a simple CRUD API application made with Express and documented with Swagger",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "Tom√°s Catena",
      "url": "https://www.tomascatena.com",
      "email": "tomascatena@gmail.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api/v1",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "API V1"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Routes related to user authentication."
    },
    {
      "name": "User",
      "description": "Routes related to user information."
    },
    {
      "name": "Friends"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Log in an existing user with email and password.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "tomas@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "abc123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get User Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully authenticated user"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "Pelusa"
                        },
                        "email": {
                          "type": "string",
                          "example": "pelusa@gmail.com"
                        },
                        "_id": {
                          "type": "string",
                          "example": "62af38fc869541e306f517a5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User Does Not Exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "User does not exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Login Invalid Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Incorrect email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Current User",
        "description": "Get logged in user information.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully authenticated user"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "Pelusa"
                        },
                        "email": {
                          "type": "string",
                          "example": "pelusa@gmail.com"
                        },
                        "_id": {
                          "type": "string",
                          "example": "62af38fc869541e306f517a5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User Does Not Exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "User does not exists"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Login Invalid Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Incorrect email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register",
        "description": "Register a new user with username, email, password and confirmPassword.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "password",
                  "confirmPassword"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "Pelusa"
                  },
                  "email": {
                    "type": "string",
                    "example": "pelusa@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "abc123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "abc123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register Sucess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "New user successfully registered"
                    },
                    "tokens": {
                      "type": "object",
                      "properties": {
                        "access": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MmFmMzc0YjFkYjkxNjEwNThmN2I3ODgiLCJpYXQiOjE2NTU2NTAxMjMsImV4cCI6MTY1NTczNjUyMywidHlwZSI6ImFjY2VzcyJ9.ahwK-6Bm9W5ICAZj35wYj8eFFukGQheYabGzBILWGKs"
                            },
                            "expires": {
                              "type": "string",
                              "example": "2022-06-20T14:48:43.685Z"
                            }
                          }
                        },
                        "refresh": {
                          "type": "object",
                          "properties": {
                            "token": {
                              "type": "string",
                              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MmFmMzc0YjFkYjkxNjEwNThmN2I3ODgiLCJpYXQiOjE2NTU2NTAxMjMsImV4cCI6MTY1ODI0MjEyMywidHlwZSI6InJlZnJlc2gifQ.srpzd0txLE67TE9b0cu0jIZcIny0vk1CjKRVsdw5rxQ"
                            },
                            "expires": {
                              "type": "string",
                              "example": "2022-07-19T14:48:43.685Z"
                            }
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "Pelusa"
                        },
                        "email": {
                          "type": "string",
                          "example": "pelusa@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Register Email Already In Use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already taken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/friends/sendInvitation": {
      "post": {
        "tags": [
          "Friends"
        ],
        "summary": "Send Inviation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "rufo@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Send Inviation Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successfully sent invitation to rufo@gmail.com"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Send Inviation Token Expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Send Inviation To Inexistent User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User with email \"user@email.com\" not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Inviation Already Sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Invitation already sent, please wait for the user to accept it"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
      }
    }
  }
}